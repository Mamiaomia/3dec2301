model new
model random 10000
model large-strain off
block tolerance 1e-4

fish define read_from_file(name)
    local f, data0, data, m, n, i, j, line, line_sim, line_spl, line_dig
    
    f=file.open(name,'r')
    data0=file.read(f)
    file.close(f)
    
    data = list
    m = list.size(data0)

    loop i(1,m)  ; m为总行数
        line = data0(i)
        line_sim = string.simplify(line);去换行符  
        line_spl = string.split(line_sim,' ') ;列表
        n = list.size(line_spl) ;n为煤层数
        line_dig = list;文本转数据
        loop j(1,n) ;n列数
            line_dig('end') = float(line_spl(j))
        end_loop
        data('e') = line_dig
    end_loop
    ;io.out(data)
    return data
end

fish define make_model_para
    ;========调试变量========
    ;工程
    global project_name='nodc1_',call_file='02model_cut.dat'
    
    ;工作面
    global toward_len=1000,inclined_len=20,excavation_len=100

    ;断层
    global dc_tilt=-90,dc_width=0,dc_h=55,protect_len=0;;没用

    ;覆岩
    global ss_rf_n=1,coal_rf_n=19,ss_name='ss',yc_name='yc'
 
    ;模型
    global zone_edge=19,gravity_value=-10,ini_top_z=0,stress_k1=0.3,stress_k2=0.6;zone_edge网格平均边长
    project_name = project_name +'p'+string(protect_len)+'t'+string(-dc_tilt)+'w'+string(dc_width)
    ;读文件
    data=read_from_file('05nb.txt')
    
    rf_h=data(1)
    rf_tilt=data(2)
    rf_edge_h=data(3)
    
    rf_dens=data(4)
    rf_young=data(5)
    rf_possion=data(6)
    rf_cohesion=data(7)
    rf_tension=data(8)
    rf_friction=data(9)
    
    contact_normal=data(10)
    contact_shear=data(11)
    ;contact_cohesion=read_from_file('33contact_cohesion.txt')
    ;contact_friction=read_from_file('34contact_friction.txt')
    ;contact_tension=read_from_file('35contact_tension.txt')
                    
    stress_z_left=data(12)
    stress_z_right=data(13)(2,-1);不用
    gradient_z=rf_dens*-gravity_value

    
    plane_n=1
    planez_list=list
    planez_list('end')=ini_top_z
    rf_z=list
    rf_n = list.size(rf_h)
    rf_z('end')=ini_top_z
    loop n(1,rf_n)
        ini_top_z-=rf_h(n)
        rf_z('end')=ini_top_z
    endloop
                    
    dc_z=list
    dc_z('end')=rf_z(-1)
    section
        loop n(1,rf_n-ss_rf_n)
            if rf_z(-n-1)+dc_h>=rf_z(ss_rf_n+1)
                dc_z('start')=rf_z(ss_rf_n+1)
                exit section
            else
                dc_z('start')=rf_z(-n-1)+dc_h
            endif
        endloop
    endsection;没用
    coal_h=-rf_z(coal_rf_n)           
    coal_str_left=yc_name+'_'+string(coal_rf_n-ss_rf_n)    
    dc_n=list.size(dc_z)-1
    dc_start_n=rf_n-ss_rf_n-dc_n+1
    dc_x1=coal_h+toward_len+protect_len
    dc_x2=dc_x1+dc_width
    dc_x3=dc_x1-(-coal_h-rf_z(-1))/math.tan(-dc_tilt*math.pi/180)
    dc_x4=(rf_z(ss_rf_n+1)+coal_h)/math.tan(-dc_tilt*math.pi/180)+dc_x2
    ext_len=dc_x4-dc_x1;没用
    
    name_group=list
    vcut_origin=toward_len/2+coal_h
    model_x=toward_len+2*coal_h
    ;model_y=inclined_len+2*coal_h
    model_y=5
end
@make_model_para

fish define h_cut(z_range,cut_len,tilt) ;上下界 切面间距  倾斜  
    local num=list.size(z_range)-1
    local cut_z=0.0
    
    loop n(1,num)
        cut_z=z_range(n)-cut_len(n)
        if z_range(n)=-coal_h
        else
            loop while cut_z-z_range(n+1)>cut_len(n)/4*3
                command
                    block cut joint-set dip @tilt(n) dip-direction 90.0 origin 0.0 0.0 @cut_z
                endcommand
                plane_n+=1
                planez_list('end')=cut_z
                cut_z-=cut_len(n)
            endloop
        endif
        
        if z_range(n+1)=rf_z(-1)
        else
            command
                block cut joint-set dip @tilt(n) dip-direction 90.0 origin 0.0 0.0 @z_range(n+1)
            endcommand
            plane_n+=1
            planez_list('end')=z_range(n+1)
        endif
    endloop
end

fish define group_name(name,list_z,tilt_list,start_n,h) ;命名 上下界限 倾斜  起始序号 断层落差
    local num=list.size(list_z)-1
    local gn=name

    loop n(start_n,start_n+num-1)
        gn=name+'_'+string(n)
        if list_z(n)=-coal_h+h
            gn='coal_0'
        endif
        command
            block group @gn range plane dip @tilt_list(n-start_n+1) dip-direction 90 origin 0 0 @list_z(n) below plane dip @tilt_list(n) dip-direction 90 origin 0 0 @list_z(n-start_n+2) above
        endcommand
        name_group('end')=gn
    endloop;分组
end

fish define v_cut_plane_nodc(z_range) ;面间竖向切割
    local num=list.size(z_range)-1
    local v_cut_n=0
    local cedge=0
    local vcut_x=0
    local all_len=0
    local xx=0
    local sign=1
            
    loop n(1,num)
    if z_range(n+1)<-coal_h
    else
        xx=(z_range(n)-z_range(n+1))/2
        cedge=(z_range(n)-z_range(n+1))*2

        v_cut_n=int(model_x/cedge)
        vcut_x=model_x/2+xx*sign
        command
            block hide off range plane dip 0 dip-direction 90 origin 0 0 @z_range(n) below plane dip 0 dip-direction 90 origin 0 0 @z_range(n+1) above
            block cut joint-set dip 90 dip-direction 90 origin @vcut_x 0 0 number @v_cut_n spacing @cedge
            block hide range plane dip 0 dip-direction 90 origin 0 0 @z_range(n) below plane dip 0 dip-direction 90 origin 0 0 @z_range(n+1) above
        endcommand            
        
    endif
    sign=-1*sign
    endloop
end

fish define v_cut_plane_left(z_range) ;面间竖向切割 没用
    local num=list.size(z_range)-1
    local v_cut_n=0
    local cedge=0
    local vcut_x=0
    local all_len=0
    local xx=0
    local sign=1
            
    loop n(1,num)
    if z_range(n+1)<-coal_h
    else
        xx=(z_range(n)-z_range(n+1))/2
        cedge=(z_range(n)-z_range(n+1))*2
        if z_range(n+1)>=rf_z(ss_rf_n+1)
            v_cut_n=int(model_x/cedge)
            vcut_x=model_x/2+xx*sign
        command
            block hide off range plane dip 0 dip-direction 90 origin 0 0 @z_range(n) below plane dip 0 dip-direction 90 origin 0 0 @z_range(n+1) above
            block cut joint-set dip 90 dip-direction 90 origin @vcut_x 0 0 number @v_cut_n spacing @cedge
            block hide range plane dip 0 dip-direction 90 origin 0 0 @z_range(n) below plane dip 0 dip-direction 90 origin 0 0 @z_range(n+1) above
        endcommand            
        else
            ;all_len=(z_range(n+1)+coal_h)/math.tan(-dc_tilt*math.pi/180)+dc_x1
            all_len=dc_x4
            v_cut_n=int(all_len/cedge)
            vcut_x=all_len/2+xx*sign
        command
            block hide off range plane dip 0 dip-direction 90 origin 0 0 @z_range(n) below plane dip 0 dip-direction 90 origin 0 0 @z_range(n+1) above
            block hide  off range plane dip @dc_tilt dip-direction 90.0 origin @dc_x1 0.0 @rf_z(coal_rf_n) below
            block hide range plane dip @dc_tilt dip-direction 90.0 origin @dc_x1 0.0 @rf_z(coal_rf_n) below
            block cut joint-set dip 90 dip-direction 90 origin @vcut_x 0 0 number @v_cut_n spacing @cedge
            ;block zone generate hexahedra divisions 1 @edge_b1 @edge_b2
            block hide range plane dip 0 dip-direction 90 origin 0 0 @z_range(n) below plane dip 0 dip-direction 90 origin 0 0 @z_range(n+1) above
        endcommand            
        endif

    endif
    sign=-1*sign
    endloop
end

fish define v_cut_plane_right(z_range) ;面间竖向切割 没用
    local num=list.size(z_range)-1
    local v_cut_n=0
    local cedge=0
    local vcut_x=0
    local all_len=0
    local xx=0
    local sign=1
            
    loop n(1,num)
    if z_range(n+1)<-coal_h+dc_h
    else
        xx=(z_range(n)-z_range(n+1))/2
        cedge=(z_range(n)-z_range(n+1))*2
         
        ;all_len=(z_range(n+1)+coal_h)/math.tan(-dc_tilt*math.pi/180)+dc_x1
        all_len=model_x-dc_x3
        v_cut_n=int(all_len/cedge)
        vcut_x=all_len/2+xx*sign+dc_x3
        command
            block hide off range plane dip 0 dip-direction 90 origin 0 0 @z_range(n) below plane dip 0 dip-direction 90 origin 0 0 @z_range(n+1) above
            block hide  off range plane dip @dc_tilt dip-direction 90.0 origin @dc_x2 0.0 @rf_z(coal_rf_n) above
            block hide range plane dip @dc_tilt dip-direction 90.0 origin @dc_x2 0.0 @rf_z(coal_rf_n) above
            block cut joint-set dip 90 dip-direction 90 origin @vcut_x 0 0 number @v_cut_n spacing @cedge
            ;block zone generate hexahedra divisions 1 @edge_b1 @edge_b2
            block hide range plane dip 0 dip-direction 90 origin 0 0 @z_range(n) below plane dip 0 dip-direction 90 origin 0 0 @z_range(n+1) above
        endcommand            


    endif
    sign=-1*sign
    endloop
end

fish define coal_cut   ;煤层分割
    local cut_n=int(toward_len/excavation_len)+1
    local cut_x=coal_h
    loop n(1,cut_n)
        command
            block cut joint-set dip 90 dip-direction 90 origin @cut_x 0 0
        endcommand
        cut_x+=excavation_len
    endloop
end

fish define yc_elc_value(name,dens_v,young_v,poisson_v) ;组名 密度 杨氏模量 泊松比
    local num=list.size(name)
    loop n(1,num)
        command
            block zone property dens @dens_v(n) young @young_v(n) poisson @poisson_v(n) range group @name(n)
        endcommand
    endloop
end

fish define con_gp_to_value(name,sti_nor,sti_she,gp_coh,gp_fri,gp_ten);组名 法向刚度 剪切刚度 粘结力 内摩擦角 抗拉强度
    local num=list.size(name)
    loop n(1,num)
        command
            block contact property stiffness-normal @sti_nor(n) stiffness-shear @sti_she(n) cohesion @gp_coh(n) friction @gp_fri(n) tension @gp_ten(n) range group @name(n)
        endcommand
    endloop
end

fish define first_stress(name,zz_stress,zz_gradient)
    local num=list.size(name)
    local stress_z_left=zz_stress*stress_k1
    local stress_z_right=zz_stress*stress_k2
    local gradient_z_left=zz_gradient*stress_k1
    local gradient_z_right=zz_gradient*stress_k2
    
    loop n(1,num)
        command
            block insitu stress @stress_z_left(n) @stress_z_right(n) @zz_stress(n) 0,0,0 gradient-z @gradient_z_left(n) @gradient_z_right(n) @zz_gradient(n) 0,0,0 range group @name(n)
        endcommand
    endloop
end

fish define yc_mk_value(name,dens_v,young_v,poisson_v,gp_coh,gp_fri,gp_ten)
    local num=list.size(name)
    loop n(1,num)
        command
            block zone property dens @dens_v(n) young @young_v(n) poisson @poisson_v(n) cohesion @gp_coh(n) friction @gp_fri(n) tension @gp_ten(n) range group @name(n)
        endcommand
    endloop
end

fish define kaiwa
local x1=0,x2=0,x3=0,times=int(toward_len/excavation_len)
  loop n (1,times)
    x1=(n-1)*excavation_len+coal_h
    x2=x1+excavation_len
    x3=n*excavation_len
    ss=project_name+'_'+string(n)+'_mining_'+string(x3)
    command 
        block delete range group @name_group(coal_rf_n) position-x @x1 @x2
        model step 2000
        ;model solve ratio 1e-4
        model save @ss
    endcommand
  endloop
end

;call @call_file